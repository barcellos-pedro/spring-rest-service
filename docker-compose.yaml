version: '3.8'

volumes:
  pgdata:

networks:
  rest-network:
    driver: bridge

services:
  app: &app_defaults
    container_name: backend
    build: .
    ports:
      - "8080:8080"
    networks:
      - rest-network
    environment:
      - DB_URL=${DB_URL}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - PGADMIN_MAIL=${PGADMIN_MAIL}
      - PGADMIN_PASSWORD=${PGADMIN_PASSWORD}
    depends_on:
      database:
        condition: service_healthy

  app2:
    <<: *app_defaults
    container_name: backend_2
    ports:
      - "8081:8080"

  nginx:
    container_name: nginx
    image: nginx:1.21.6
    networks:
      - rest-network
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - '80:80'
    depends_on:
      - app

  database:
    container_name: database
    image: postgres:14.5
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"
    restart: always
    networks:
      - rest-network
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${DB_USERNAME}", "-d", "${DB_NAME}", "-h", "127.0.0.1", "-p", "5432" ]
      interval: 10s
      timeout: 5s
      retries: 3

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:8.2
    restart: always
    networks:
      - rest-network
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_MAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    ports:
      - "5050:80"
